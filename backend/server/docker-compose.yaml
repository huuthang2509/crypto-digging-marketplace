version: "3.8"

services:
  dg-data:
    restart: always
    image: hasura/graphql-engine:v2.3.1
    ports:
      - 8080:8080
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.data.rule=Host(`${DATA_DOMAIN}`)"
    depends_on:
      - dg-postgres
      - dg-events
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      HASURA_GRAPHQL_ENABLE_CONSOLE: true
      HASURA_GRAPHQL_DEV_MODE: true
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: http-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
      ACTION_URL: http://dg-events:9000/actions
      TRIGGER_URL: http://dg-events:9000/triggers
      CRONJOB_URL: http://dg-events:9000/cronjobs

  dg-events:
    ports:
      - 9000:9000
    environment:
      SERVICE_LOG: ${SERVICE_LOG}
      LEVEL_LOG_GOOGLE: ${LEVEL_LOG_GOOGLE}
      GOOGLE_APPLICATION_CREDENTIALS: /google-cert.json
      LEVEL_LOG: ${LEVEL_LOG}
      LOG_NAME: dg-events
      NODE_ENV: ${NODE_ENV}

      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}

      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}

      ADDRESS: ${ADDRESS}
      PRIVATE_KEY: ${PRIVATE_KEY}

      INFURA_URL: ${INFURA_URL}

      SOL_NETWORK: ${SOL_NETWORK}
      SOL_PRICE_URL: ${SOL_PRICE_URL}
      SOL_PRIVATE_KEYPAIR: ${SOL_PRIVATE_KEYPAIR}

      CDG_TOKEN_ID: ${CDG_TOKEN_ID}

      JWT_SECRET: ${JWT_SECRET}

      SIGNATURE_EXPIRED: ${SIGNATURE_EXPIRED}

volumes:
  db_data: